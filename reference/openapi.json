{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "hcjpz20r5j1pq"
  },
  "info": {
    "title": "Schematalog",
    "version": "1.0",
    "contact": {
      "name": "Berislav Lopac",
      "url": "https://github.com/berislavlopac/",
      "email": "berislav@lopac.net"
    },
    "license": {
      "name": "MIT"
    },
    "description": "API for cataloguing JSON Schema specifications."
  },
  "servers": [
    {
      "url": "http://localhost:3000/v1"
    }
  ],
  "paths": {
    "/schemas": {
      "get": {
        "summary": "Get all schemas",
        "tags": [
          "json-schema"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of found schemas.",
                  "items": {
                    "$ref": "#/components/schemas/Schema"
                  }
                }
              }
            }
          }
        },
        "operationId": "retrieve-schemas",
        "description": "Retrieve the latest versions of all published schemas."
      }
    },
    "/schemas/{name}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "name",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get schema",
        "tags": [
          "json-schema"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "operationId": "retrieve-schema",
        "description": "Retrieve the latest version of a schema."
      },
      "put": {
        "summary": "Update schema",
        "operationId": "update-schema",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "Update the latest non-published version of the schema. If the name does not exist, a new draft schema (with `version=0.0`) is inserted. Otherwise, if there are no non-published versions, `409 CONFLICT` is returned.",
        "tags": [
          "json-schema"
        ]
      }
    },
    "/schemas/{name}/{version}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "name",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "version",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get schema version",
        "tags": [
          "json-schema"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "operationId": "retrieve-schema-version",
        "description": "Retrieve a specific version of a schema. If either the name or the version do not exist, a new draft schema, with the given version, is inserted. If the version is published or deprecated, `409 CONFLICT` is returned."
      },
      "put": {
        "summary": "Update schema version",
        "operationId": "update-schema-version",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          },
          "409": {
            "description": "Conflict"
          }
        },
        "description": "Update the latest non-published version of the schema.",
        "tags": [
          "json-schema"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Schema": {
        "title": "Schema",
        "x-stoplight": {
          "id": "2hnm9ob2568rf"
        },
        "type": "object",
        "description": "JSON Schema specification.",
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[\\w\\-]*$",
            "description": "Unique name of the schema."
          },
          "version": {
            "type": "string",
            "pattern": "^([0-9]+)\\.([0-9]+)$",
            "description": "Version of the schema, in the comver form: [major].[minor].",
            "example": "1.2",
            "default": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the schema."
          },
          "schema": {
            "$ref": "https://json-schema.org/draft/2020-12/schema"
          },
          "created_on": {
            "type": "string",
            "description": "Date and time when the schema version was created.",
            "format": "date-time"
          },
          "published_on": {
            "type": "string",
            "format": "date-time",
            "description": "Time of publishing. If not present or null, the schema is considered draft; a published schema version can not be altered."
          },
          "deprecated_since": {
            "type": "string",
            "format": "date-time",
            "description": "If present, the schema version is deprecated and should not be used."
          }
        },
        "required": [
          "schema"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "json-schema"
    }
  ]
}